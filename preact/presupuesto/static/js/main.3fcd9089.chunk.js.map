{"version":3,"sources":["components/Error.jsx","components/Pregunta.jsx","components/Formulario.jsx","components/Gasto.jsx","components/Gastos.jsx","helper.js","components/ControlPresupuesto.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gasto","id","shortid","generate","document","getElementById","Gasto","Gastos","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarpregunta","actualizarGastos","crearGasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3fcd9089.chunk.js","sourcesContent":["const Error = ( { mensaje } ) => (\n  <p className=\"alert alert-danger error\">{ mensaje }</p>\n);\n\nexport default Error;\n\n","import { Fragment, useState } from \"react\";\nimport Error from './Error.jsx';\n\nconst Pregunta = ({ guardarPresupuesto, guardarRestante, actualizarPregunta }) => {\n  // definir state\n  const [ cantidad, guardarCantidad ] = useState(0);\n  const [ error, guardarError ] = useState(false);\n  // Funcion que lee el presupuesto\n  const definirPresupuesto = e =>{\n    guardarCantidad(parseInt(e.target.value, 10));\n  }\n  // Submit para definir el presupuesto\n  const agregarPresupuesto = e =>{\n    e.preventDefault();\n    //Validar\n    if(cantidad < 1 || isNaN( cantidad )){\n      guardarError(true);\n      return;\n    }\n    \n    //Si pasa la validacion\n    guardarError(false);\n    guardarPresupuesto( cantidad );\n    guardarRestante( cantidad );\n    actualizarPregunta(false);\n  }\n\n  return (\n    <Fragment>\n      <h2> Coloca tu presupuesto </h2>\n      { error ? <Error mensaje=\"El presupuesto es Incorrecto\" /> : null }\n      <form\n        onSubmit={ agregarPresupuesto }\n      >\n        <input\n          type=\"number\"\n          className=\"u-full-width\"\n          placeholder=\"Coloca tu presupuesto\"\n          onChange={ definirPresupuesto }\n        />\n        <input\n          type=\"submit\"\n          className=\"button-primary u-full-width\"\n          value=\"Definir Presupuesto\"\n        />\n      </form>\n    </Fragment>\n  );\n};\nexport default Pregunta;\n","import { useState } from \"react\";\nimport shortid from 'shortid';\nimport Error from './Error.jsx';\nconst Formulario = ({ guardarGasto, guardarCrearGasto }) => {\n  // estado de gasto\n  const [nombre, guardarNombre] = useState(\"\");\n  const [cantidad, guardarCantidad] = useState(0);\n  const [ error, guardarError ] = useState(false);\n\n  const agregarNombre = e => {\n    guardarNombre(e.target.value);\n  };\n  const agregarCantidad = e => {\n    guardarCantidad(parseInt(e.target.value));\n  };\n  //Cuando el usuario agrega un gasto\n  const agregarGasto = e => {\n    e.preventDefault();\n    // Validar \n    if (cantidad < 1 || isNaN( cantidad ) || nombre.trim() === ''){\n      guardarError(true);\n      return;\n    }\n    // Construir el gasto\n    const gasto  = {\n      nombre: nombre,\n      cantidad: cantidad,\n      id: shortid.generate()\n    };\n    //Pasar el gasto al componente principal\n    guardarGasto(gasto);\n    guardarCrearGasto(true);\n    \n    //Resetear el form\n    guardarNombre('');\n    guardarCantidad(0);\n    document.getElementById('nombre').value = '';\n    document.getElementById('cantidad').value = null;\n    \n  };\n  return (\n    <form onSubmit={ agregarGasto } >\n      <h2> Agrega tus gastos aquÃ­ </h2>\n      { error ? <Error mensaje=\"Ambos campos son obligatorios o el gasto que ha introducido es incorrecto \" /> : null }\n      <div className=\"campo\">\n        <input\n          id=\"nombre\"\n          type=\"text\"\n          className=\"u-full-width\"\n          placeholder=\"Ej. Transporte\"\n          onChange={agregarNombre}\n        />\n      </div>\n      <div className=\"campo\">\n        <input\n          id=\"cantidad\"\n          type=\"number\"\n          className=\"u-full-width\"\n          placeholder=\"Ej. 300\"\n          onChange={agregarCantidad}\n        />\n      </div>\n      <input\n        type=\"submit\"\n        className=\"button-primary u-full-width\"\n        value=\"Agregar Gasto\"\n      />\n    </form>\n  );\n};\n\nexport default Formulario;\n","const Gasto = ({ gasto }) => {\n  const { nombre, cantidad } = gasto;\n  return (\n    <li className=\"gastos\">\n      <p>\n        {nombre}\n        <span className=\"gasto\"> $ {cantidad} </span>\n      </p>\n    </li>\n  );\n};\n\nexport default Gasto;\n","import Gasto from './Gasto.jsx';\nimport PropTypes from 'prop-types';\n\nconst Gastos = ( {gastos} ) => {\n  return(\n    <div className=\"gastos-realizados\">\n      <h2> Listado </h2>\n    {\n      gastos.map(gasto => (\n        <Gasto \n        key={gasto.id}\n        gasto={gasto} />\n      ))\n    }\n    </div>\n  );\n}\n\nGastos.propTypes = {\n  gastos: PropTypes.array.isRequired\n}\n\nexport default Gastos;\n","export const revisarPresupuesto = (presupuesto, restante) => {\n  let clase;\n\n  if ((presupuesto / 4) > restante) {\n    clase = 'alert alert-danger';\n  } else if ((presupuesto / 2) > restante ) {\n    clase = 'alert alert-warning';\n  } else {\n    clase = 'alert alert-success';\n  }\n  return clase;\n}\n","import { Fragment } from \"react\";\nimport { revisarPresupuesto } from './../helper';\n\nconst ControlPresupuesto = ({ presupuesto, restante }) => {\n  return (\n    <Fragment>\n      <div className=\"alert alert-primary\">\n        Presupuesto: ${ presupuesto }\n      </div>\n      <div className={ revisarPresupuesto( presupuesto, restante ) } >\n        Restante: ${ restante }\n      </div>\n    </Fragment>\n  );\n}\n\n\nexport default ControlPresupuesto;\n","import { useState, useEffect } from \"react\";\nimport Pregunta from \"./components/Pregunta.jsx\";\nimport Formulario from \"./components/Formulario.jsx\";\nimport Gastos from \"./components/Gastos.jsx\";\nimport ControlPresupuesto from \"./components/ControlPresupuesto.jsx\";\n\nfunction App() {\n  // definir el state\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0);\n  const [mostrarpregunta, actualizarPregunta] = useState(true);\n  const [gastos, actualizarGastos] = useState([]);\n  const [ gasto, guardarGasto ] = useState({});\n  const [ crearGasto, guardarCrearGasto ] = useState(false);\n  \n//UseEffect actualiza el restante\n  useEffect(()=>{\n    if (crearGasto){\n    //Agrega el nuevo presupuesto\n    actualizarGastos([\n      ...gastos,\n      gasto\n    ])\n      //Resta del presupuesto actual\n      const presupuestoRestante = restante - gasto.cantidad;\n      guardarRestante(presupuestoRestante);\n\n      // Resetear a false \n      guardarCrearGasto(false);\n   }\n  }, [gasto, crearGasto, gastos, restante]);\n  return (\n    <div className=\"container\">\n      <header>\n        <h1> Gasto Semanal </h1>\n        <div className=\"contenido-principal contenido\">\n          {mostrarpregunta ? (\n            <Pregunta\n              guardarPresupuesto={guardarPresupuesto}\n              guardarRestante={guardarRestante}\n              actualizarPregunta={actualizarPregunta}\n            />\n          ) : (\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <Formulario\n                  guardarPresupuesto={guardarPresupuesto}\n                  guardarRestante={guardarRestante}\n                  guardarGasto={guardarGasto}\n                  guardarCrearGasto={guardarCrearGasto}\n                  gastos={gastos}\n                />\n              </div>\n              <div className=\"one-half column\">\n                <Gastos gastos={gastos} />\n                <ControlPresupuesto \n                  presupuesto={ presupuesto }\n                  restante={ restante }\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}