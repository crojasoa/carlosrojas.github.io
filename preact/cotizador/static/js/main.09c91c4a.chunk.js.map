{"version":3,"sources":["components/Header.jsx","components/Formulario.jsx","helpers/seguro.js","components/Resumen.jsx","components/Resultado.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","Campo","div","Select","select","Boton","button","Error","p","Total","Formulario","guardarResumen","useState","marca","year","plan","datos","guardarDatos","error","guardarError","presupuestoCalculado","guardarPresupuestoCalculado","total","guardarTotal","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","costo","diferenciaAnual","Date","getFullYear","calcularDiferenciaYear","console","log","porcentajePorMarca","porcentaje","calcularCostoPorMarca","porcentajePorPlan","calcularDescuentoPorPlan","resultado","onChange","type","checked","Resumen","Resultado","ContenedorFormulario","Contenedor","App","resumen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09c91c4a.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nconst ContenedorHeader = styled.header`\n  background-color: #26C6DA;\n  padding: 10px;\n  font-weight: bold;\n  color: #FFFF;\n`;\n\nconst TextoHeader =  styled.h1`\n  font-size: 2rem;\n  margin: 0;\n  font-family: 'Slabo 27px', serif;\n  text-align: center;\n`;\n\nconst Header = ({ titulo }) => {\n  return(\n    <ContenedorHeader>\n      <TextoHeader> { titulo } </TextoHeader>\n    </ContenedorHeader>\n  );\n}\n\nexport default Header;\n","import { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { calcularDiferenciaYear, calcularCostoPorMarca, calcularDescuentoPorPlan } from './../helpers/seguro.js';\n\nconst Campo = styled.div`\n  display: flex;\n  margin-bottom: 1rem;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Select = styled.select`\n  width: 60%;\n  height: 2rem;\n  border: none;\n  background: rgba(72, 190, 200, 0.47);\n  border-radius: 3px;\n`;\n\nconst Boton = styled.button`\n  width: 100%;\n  background: rgba(12, 200, 163, 0.9);\n  height: 2rem;\n  border: none;\n  cursor: pointer;\n  margin: auto;\n  color: white;\n  font-weight: bold;\n  transition: 1s;\n  &:hover {\n    background: rgb(40, 160, 140);\n    border-radius: 10px;\n  }\n`;\n\nconst Error = styled.p`\n    color: red;\n`;\n\nconst Total = styled.p`\n    display: flex;\n    justify-content: center;\n    align-self: center;\n    font-weight: bold;\n    padding-top: 1rem;\n    height: 2rem;\n    width: 100%;\n    border: 2px solid rgb(40, 160, 140);\n    color: rgb(40, 160, 140);\n`;\n\nconst Formulario = ( { guardarResumen } ) => {\n  // States\n  const [datos, guardarDatos] = useState({\n    marca: \"\",\n    year: \"\",\n    plan: \"\",\n  });\n  const [ error, guardarError ] = useState(false);\n  const [ presupuestoCalculado, guardarPresupuestoCalculado ] = useState(false);\n  const [ total, guardarTotal ] = useState(0);\n\n  // Extraer los valores del state\n  const { marca, year, plan } = datos;\n\n  // Leer los datos del formulario y colocarlos en el state\n  const obtenerInformacion = (e) => {\n    guardarDatos({\n      ...datos,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Funcion de cotizar seguro llamada al hacer submit\n  const cotizarSeguro = e => {\n    e.preventDefault();\n\n    if (marca.trim() === '' || year.trim() === '' || plan.trim() === '' ){\n      guardarError(true);\n      return;\n    }\n    guardarError(false);\n    let costo = 2000;\n\n    // obtener la diferencia de años\n    const diferenciaAnual = calcularDiferenciaYear(datos.year);\n    let porcentajePorDiferenciaAnual = diferenciaAnual * 3;\n\n    // por cada año hay que sumar 3%\n    costo = costo + (costo * porcentajePorDiferenciaAnual / 100);\n    console.log(costo);\n\n    // USA 15%\n    // Asiatico 5%\n    // Europeo 30%\n    let porcentajePorMarca = calcularCostoPorMarca(datos.marca);\n    costo = costo + ( costo * porcentajePorMarca / 100 ); \nconsole.log(costo);\n\n    // Basico aumenta 20%\n    // Completo 50%\n    let porcentajePorPlan = calcularDescuentoPorPlan(datos.plan);\n    costo = costo + ( costo * porcentajePorPlan / 100 );\n    // Total\n\n    guardarTotal(costo);\n    guardarResumen({\n      resultado: costo,\n      datos\n    });\n    guardarPresupuestoCalculado(true);\n  }\n\n  return (\n    <form onSubmit={ cotizarSeguro } >\n      <Campo>\n        <label> Marca: </label>\n        <Select name=\"marca\" value={marca} onChange={obtenerInformacion}>\n          <option value=\"\">-- Seleccione --</option>\n          <option value=\"usa\"> USA </option>\n          <option value=\"europeo\"> Europeo </option>\n          <option value=\"asiatico\"> Asiatico </option>\n        </Select>\n      </Campo>\n      <Campo>\n        <label> Año: </label>\n        <Select name=\"year\" value={year} onChange={obtenerInformacion}>\n          <option value=\"\">-- Seleccione --</option>\n          <option value=\"2021\"> 2021 </option>\n          <option value=\"2020\"> 2020 </option>\n          <option value=\"2019\"> 2019 </option>\n          <option value=\"2018\"> 2018 </option>\n          <option value=\"2017\"> 2017 </option>\n          <option value=\"2016\"> 2016 </option>\n          <option value=\"2015\"> 2015 </option>\n          <option value=\"2014\"> 2014 </option>\n          <option value=\"2013\"> 2013 </option>\n          <option value=\"2012\"> 2012 </option>\n          <option value=\"2011\"> 2011 </option>\n          <option value=\"2010\"> 2010 </option>\n        </Select>\n      </Campo>\n\n      <Campo>\n        <label> Plan: </label> <br />\n        <input\n          type=\"radio\"\n          name=\"plan\"\n          value=\"basico\"\n          checked={plan === \"basico\"}\n          onChange={obtenerInformacion}\n        />\n        Basico\n        <input\n          type=\"radio\"\n          name=\"plan\"\n          value=\"completo\"\n          checked={plan === \"completo\"}\n          onChange={obtenerInformacion}\n        />\n        Completo\n      </Campo>\n      { error ? <Error> Debe llenar todos los campos </Error> : null }\n      <Boton type=\"submit\"> Cotizar </Boton>\n\n      { presupuestoCalculado ?<Total> Su presupuesto es de { total } </Total> : null }\n\n    </form>\n  );\n};\n\nexport default Formulario;\n","export function calcularDiferenciaYear(year) {\n  return new Date().getFullYear() - year;\n}\n\nexport function calcularCostoPorMarca(marca) {\n  let porcentaje = 0;\n  if ( marca === 'usa' ) {\n    porcentaje = 15;\n  } else if ( marca === 'asiatico' ) {\n    porcentaje = 5;\n  } else if ( marca === 'europeo' ) {\n    porcentaje = 30;\n  }\n  return porcentaje;\n}\n\nexport function calcularDescuentoPorPlan(plan) {\n  let porcentaje = 0;\n  if ( plan === 'basico' ) {\n    porcentaje = 20;\n  } else if ( plan === 'completo' ) {\n    porcentaje = 50;\n  }\n\n  return porcentaje;\n}\n","import { Fragment } from \"react\";\n\nconst Resumen = ({ datos }) => {\n  const { marca, year, plan } = datos;\n\n  if (marca === \"\" || year === \"\" || plan === \"\") return null;\n\n  return (\n    <Fragment>\n      <h2> Resumen de Cotización </h2>\n      <p>Marca: {marca} </p>\n      <p>Year: {year} </p>\n      <p>Plan: {plan} </p>\n    </Fragment>\n  );\n};\n\nexport default Resumen;\n","import { Fragment } from \"react\";\n\n\nconst Resultado = ({ resultado }) => {\n  \n  if ( resultado === 0 ) return null;\n\n  return(\n    <Fragment>\n      <h3>Presupuesto: { resultado } </h3>\n    </Fragment>\n  );\n}\n\nexport default Resultado; \n","import { useState } from \"react\";\nimport Header from \"./components/Header.jsx\";\nimport Formulario from \"./components/Formulario.jsx\";\nimport Resumen from \"./components/Resumen.jsx\";\nimport Resultado from \"./components/Resultado.jsx\";\n\nimport styled from \"@emotion/styled\";\n\nconst ContenedorFormulario = styled.div`\n  background: #fff;\n  padding: 3rem;\n`;\n\nconst Contenedor = styled.div`\n  width: 50%;\n  align-self: center;\n  margin: auto;\n  margin-top: 2rem;\n`;\n\nfunction App() {\n  const [resumen, guardarResumen] = useState(\n    {\n      resultado: 0,\n      datos: {\n        marca: '',\n        year: '',\n        plan: ''\n      }\n    }\n  );\n\n  const { datos, resultado } = resumen;\n  \n  return (\n    <Contenedor>\n      <Header titulo=\"Cotizador de Seguros\" />\n      <ContenedorFormulario>\n        <Formulario guardarResumen={guardarResumen} />\n        <Resumen datos={datos} />\n        <Resultado resultado={resultado} />\n      </ContenedorFormulario>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}